--- WheelDrive.java
+++ WheelDrive.java
@@ -1,5 +1,5 @@
 package org.wfrobotics.commands.drive.cal;
 
-import org.wfrobotics.Utilities;
+import org.wfrobotics.hardware.cal.SpeedPIDFCommand;
 import org.wfrobotics.robot.Robot;
 
@@ -4,13 +4,11 @@
 import org.wfrobotics.robot.Robot;
 
-import edu.wpi.first.wpilibj.command.Command;
-
-public class WheelDrive extends Command 
-{    
-    private final double TIME_WORST_F = 1;
-    private final double TIME_CLOSED_LOOP_ERROR = TIME_WORST_F + 4;
-    
-    private double startTime;
+public class WheelDrive extends SpeedPIDFCommand
+{
+    public interface AutoCalibratable
+    {
+        public void TalonRawSet(double xRaw, double yRaw);
+    }
     
     public WheelDrive()
     {
@@ -14,5 +12,6 @@
     
     public WheelDrive()
     {
+        super(1, 4);
         this.requires(Robot.driveSubsystem);
     }
@@ -17,5 +16,6 @@
         this.requires(Robot.driveSubsystem);
     }
-    
-    protected void initialize()
+
+    @Override
+    public void setMotor(double xRaw, double yRaw)
     {
@@ -21,27 +21,4 @@
     {
-        startTime = timeSinceInitialized();
-        
-        // TODO swap out motors
-    }
-    
-    protected void execute()
-    {
-        double timeElapsed = timeSinceInitialized() - startTime;
-        
-        if (timeElapsed < TIME_WORST_F)
-        {
-            Robot.driveSubsystem.driveTank(0, 1);
-        }
-        else if (timeElapsed < TIME_CLOSED_LOOP_ERROR)
-        {
-            double command = Utilities.scaleToRange(timeElapsed - TIME_WORST_F, TIME_WORST_F, TIME_CLOSED_LOOP_ERROR, 0, 1);
-                    
-            Robot.driveSubsystem.driveTank(0, command);
-        }
-    }
-    
-    protected boolean isFinished()
-    {
-        return false;
+        Robot.driveSubsystem.TalonRawSet.(xRaw, yRaw);
     }
 }
